#ifndef _HI_AUTH_H__
#define _HI_AUTH_H__
#include <hi_types.h>
#include <hi_mdm_types.h>
#include <hi_sal.h>
#include <dfx_sal.h>

HI_EAPI HI_U32 HI_AUTH_CreateChallenge(HI_OUT HI_TCP_AUTH_CHALLENGE_S * pstChallenge);
HI_EAPI HI_U32 HI_AUTH_SetSTK2NV(HI_IN HI_U8 aucSTK[CHANLLENGE_COMMON_SIZE],HI_U16 usCnt,HI_U8 aucSault[CHANLLENGE_SALT_SIZE]);
HI_EAPI HI_U32 HI_AUTH_GetNvSTK (HI_U8 paucSTK[CHANLLENGE_COMMON_SIZE]);
HI_EAPI HI_U32 HI_AUTH_CreateSTK(HI_IN HI_U8 aucNvSTK[CHANLLENGE_COMMON_SIZE],HI_IN HI_U8 aucChallenge[CHANLLENGE_COMMON_SIZE],HI_IN HI_U8 aucHsoCP[CHANLLENGE_COMMON_SIZE], HI_OUT HI_U8 aucCalcSTK[CHANLLENGE_COMMON_SIZE]);
HI_EAPI HI_U32 HI_AUTH_PassWordCheck(HI_IN HI_U8 ucComPareData1[CHANLLENGE_COMMON_SIZE],HI_IN HI_U8 ucComPareData2[CHANLLENGE_COMMON_SIZE],HI_U32 *pRetData);
HI_EAPI HI_U32 HI_AUTH_SetAccountLockEnable(HI_BOOL bEnable);
HI_EAPI HI_BOOL HI_AUTH_GetAccountLockEnable(HI_VOID);
HI_EAPI HI_U32 HI_AUTH_SetChagePassWordEnable(HI_BOOL bEnable);
HI_EAPI HI_BOOL HI_AUTH_GetChagePassWordEnable(HI_VOID);
HI_EAPI HI_U32 HI_AUTH_SetMaxTryTimes(HI_U8 maxTryTimes);
HI_EAPI HI_U32 HI_AUTH_GetMaxTryTimes(HI_VOID);
HI_EAPI HI_U32 HI_AUTH_SetMaxLockSec(HI_U16 maxLockSec);
HI_EAPI HI_U16 HI_AUTH_GetMaxLockSec(HI_VOID);
HI_EAPI HI_U32 HI_AUTH_CreateNewCntAndSalt(HI_U16 *ulCnt,HI_U8 aucSault[CHANLLENGE_SALT_SIZE]);

#endif

